<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.KG.mybatis.myMapper">

	<!-- 사이드바 리스트 -->
	<select id="sidebarlist" resultType="boardDTO">
		SELECT * FROM board WHERE b_category=#{b_category} and b_article=#{b_article}
	</select>

	<!-- 카테고리 리스트 출력 -->
	<select id="categoryList" resultType="boardDTO">
		SELECT * FROM BOARD where B_ARTICLE is null and B_ARTICLE is null ORDER by B_CATENUM
	</select>
	
	<!-- 아티클 리스트 출력 -->
	<select id="articleList" resultType="boardDTO">
		SELECT * FROM BOARD where B_num is null and B_ARTICLE is not null ORDER by B_ARTICLENUM
	</select>
	
	<!-- 사이드바 닉네임으로 정보 가져오기 -->
	<select resultType="memberDTO" id="userInfo">SELECT * FROM member WHERE m_id=#{m_id} </select>
	
	<!-- 사이드바 작성한 게시글 수 가져오기 -->
	<select resultType="int" id="boardCount">SELECT COUNT(*) FROM board where b_id=#{m_id} </select>
	
	<!-- 사이드바 작성한 댓글 수 가져오기 -->
	<select resultType="int" id="replyCount">SELECT COUNT(*) FROM reply where c_id=#{m_id} </select>
	
	<!-- 유저가 작성한 게시글 가져오기 -->
	<select id="userBoardList" parameterType="hashMap" resultType="boardDTO">
		SELECT B.* FROM (
			SELECT rownum rn, A.* FROM (SELECT * FROM board where b_id=#{b_id}  ORDER by B_NUM DESC)A
		)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	
	<!-- 유저가 작성한 게시글 카운터 -->
	<select id="userBoardListCount" resultType="int">
		SELECT count(*) FROM board WHERE b_id=#{b_id}
	</select>
	
	<!-- 글번호로 게시글 가져오기 -->
	<select id="boardNumList" resultType="boardDTO">SELECT * FROM board where b_num = #{c_boardNum} </select>
	
	<!-- /////////////////////// 글 목록 ////////////////////////// -->
	<!-- 글 목록 -->
	<select id="list" parameterType="hashMap" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_article=#{article} and b_title is not null
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	<!-- 글 목록 개수 -->
	<select id="getCount" resultType="int">
		SELECT count(*) FROM board 
			WHERE b_category=#{b_category} and b_article=#{b_article} and b_title is not null
	</select>


	<!-- 글 목록(전체) -->
	<select id="listAll" parameterType="hashMap" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_title is not null
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	<!-- 글 목록 개수(전체) -->
	<select id="getCountAll" resultType="int"> 
		SELECT count(*) FROM board 
			WHERE b_title is not null
	</select>
	<!--  ///////////////////////////////////////////////////  -->
	
	
	
	
	<!-- ///////////////////////////////// 글 쓰기 ////////////////////// -->
	
	<!-- 게시판 가져오기(카테고리 분류) -->
	<select id="cateList" resultType="boardDTO">
		SELECT * FROM board WHERE b_category=#{b_category} and b_num is null and B_ARTICLENUM is not null
	</select>
	
	<!-- 글 쓰기(저장) -->
	<insert id="boardWrite" useGeneratedKeys="true" keyProperty="b_num">
		<selectKey keyProperty="b_num" resultType="int" order="BEFORE">
			SELECT b_numSQ.nextval FROM dual
		</selectKey>	
			INSERT INTO board 
				(b_category, b_article , b_num , b_title, b_content, b_nick, b_date, b_hit, b_renum, b_sortnum, b_group, b_id, b_comCount)
			VALUES 
				(#{b_category} , #{b_article} , #{b_num} , #{b_title} , #{b_content} , #{b_nick} , sysdate , 0 , 0 , 0, b_numSQ.currval, #{b_id}, 0)
	</insert>
	<!-- ///////////////////////////////////////////////////////////////// -->
	
	 
	<!-- ///////////////////////////////전체 글  검색 ////////////////////////////// -->
	<!-- 제목 + 내용으로 검색 -->
	<select id="TCsearchAll" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_title is not null 
				and (b_title like '%'||#{b_content}||'%' OR b_content like '%'||#{b_content}||'%')
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	<!-- 제목 + 내용 개수 -->
	<select id="TCsearchCountAll" resultType="int">
		SELECT count(*) FROM board 
			WHERE b_title is not null and (b_title like '%'||#{b_content}||'%' OR b_content like '%'||#{b_content}||'%')
	</select>
	
	<!-- 제목으로 검색 -->
	<select id="TsearchAll" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_title is not null and b_title like '%'||#{b_content}||'%' 
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	<!-- 제목 개수 -->
	<select id="TsearchCountAll" resultType="int">
		SELECT count(*) FROM board 
			WHERE b_title is not null and b_title like '%'||#{b_content}||'%'
	</select>
	
	<!-- 작성자로 검색 -->
	<select id="WsearchAll" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_title is not null and b_nick like '%'||#{b_content}||'%' 
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	
	<select id="WsearchCountAll" resultType="int">
		SELECT count(*) FROM board 
			WHERE b_title is not null and b_nick like '%'||#{b_content}||'%'
	</select>
	<!-- ///////////////////////////////////////////////////////////////////////// -->
	
	
	<!-- //////////////////////////// 게시판 검색 //////////////////////////////// -->
	<!-- 제목 + 내용으로 검색 -->
	<select id="TCsearch" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_title is not null and b_category = #{b_category} and b_article = #{b_article}
				and (b_title like '%'||#{b_content}||'%' OR b_content like '%'||#{b_content}||'%')
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	<!-- 제목 + 내용 개수 -->
	<select id="TCsearchCount" resultType="int">
		SELECT count(*) FROM board 
			WHERE b_title is not null and b_category = #{b_category} and b_article = #{b_article}
			and (b_title like '%'||#{b_content}||'%' OR b_content like '%'||#{b_content}||'%')
	</select>	
	
	<!-- 제목 검색  -->
	<select id="Tsearch" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_title is not null and b_category = #{b_category} and b_article = #{b_article}
				and b_title like '%'||#{b_content}||'%'
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	<!-- 제목 검색 개수 -->
	<select id="TsearchCount" resultType="int">
		SELECT count(*) FROM board 
			WHERE b_title is not null and b_category = #{b_category} and b_article = #{b_article}
			and b_title like '%'||#{b_content}||'%'
	</select>
	
	<!-- 작성자 검색 -->
	<select id="Wsearch" resultType="boardDTO">
	SELECT B.* FROM (
		SELECT rownum rn, A.* FROM (
			SELECT * FROM board 
				WHERE b_title is not null and b_category = #{b_category} and b_article = #{b_article}
				and b_nick like '%'||#{b_content}||'%'
				ORDER BY b_group DESC , b_sortnum ASC
			)A
	)B WHERE rn BETWEEN #{start} and #{end}
	</select>
	<!-- 작성자 검색 개수 -->
	<select id="WsearchCount" resultType="int">
		SELECT count(*) FROM board 
			WHERE b_title is not null and b_category = #{b_category} and b_article = #{b_article}
			and b_nick like '%'||#{b_content}||'%'
	</select>
	<!-- ///////////////////////////////////////////////////////////////////// -->
	
	
	<!-- 게시물 보기 -->
	<update id="hitUp" parameterType="int">
		UPDATE BOARD set B_HIT = B_HIT+1 where b_num = #{b_num}
	</update>
	
	<select id="showBoard" resultType="boardDTO">
		SELECT * FROM board 
			WHERE b_num = #{b_num}
	</select>
	
	<!-- 게시판 전부 가져오기 -->
	<select id="getArticle" resultType="boardDTO">
		SELECT * FROM board 
			WHERE b_articleNum IS NOT NULL
	</select>
	
	<!-- 게시글 수정 -->
	<update id="modifyBoard">
		UPDATE board 
			SET b_article=#{b_article} , b_title=#{b_title} , b_content=#{b_content} 
			WHERE b_num = #{b_num}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteBoard">
		DELETE FROM board 
			WHERE b_num = #{b_num}
	</delete>
	<!-- 게시글 삭제 시 댓글 전부 삭제 -->
	<delete id="deleteComment">
		DELETE FROM reply
			WHERE c_boardNum = #{b_num}
	</delete>
	
	
	<!-- 답글 쓰기 저장 -->
	<insert id="replySave">
		INSERT INTO board 
			(b_category, b_article, b_num, b_title, b_content, b_nick, b_date, b_hit, b_reNum, b_sortNum, b_group, b_id, b_comCount)
		values
			(#{b_category}, #{b_article}, b_numSQ.nextval, #{b_title}, #{b_content}, #{b_nick}, sysdate, 0, #{b_reNum}, #{b_sortNum}, #{b_group}, #{b_id}, 0)
	</insert>
	
	<!-- 나보다 큰 sortNum +1 해주기 -->
	<update id="sortNumPlus">
		UPDATE board SET b_sortNum = b_sortNum + 1 WHERE b_group=#{b_group} and b_sortNum &gt; #{b_sortNum}
	</update>
	
	<!-- ////////////////////////////////// 업로드 & 다운로드 관련 /////////////////////////////////// -->
	
	<!-- 글쓰기 떄 파일 업로드 -->
	<insert id="insertFile">
		INSERT INTO saveFile(
			f_no , f_boardNum , f_oriName , f_modiName , f_size , f_mark
		) VALUES (
			f_noSQ.nextval , #{f_boardNum} , #{f_oriName} , #{f_modiName} , #{f_size} , #{f_mark} 
		)
	</insert>
	
	<!-- 첨부파일 조회 -->
	<select id="selectFileList" resultType="hashMap">
		SELECT F_NO , F_ORINAME , ROUND(F_SIZE/1024,1) AS f_SIZE , F_MODINAME
			FROM saveFile 
		WHERE f_boardNum = #{f_boardNum} and f_del = 'N' 
			ORDER BY f_no ASC
	</select>
	
	<!-- 첨부파일 다운 -->
	<select id="selectFileInfo" resultType="hashMap">
		SELECT 
			f_modiName , f_oriName 
		FROM saveFile
			WHERE f_no = #{f_no}
	</select>
	
	<!-- 첨부파일 삭제 -->
	<delete id="deleteFile">
		DELETE FROM saveFile
			WHERE f_no = #{f_no}
	</delete>
	
	<!-- 게시글 삭제 시 첨부파일 전부 삭제 -->
	<delete id="allFileDel">
		DELETE FROM saveFile
			WHERE f_boardNum = #{b_num}
	</delete>
	<!-- /////////////////////////////////////////////////////////////////////////////// -->
	
	<!-- 추천(따봉) 추가 -->
	<insert id="addLike">
		INSERT INTO likeData VALUES (#{l_id} , #{l_boardNum} , 'L')
	</insert>
	
	<!-- 추천(따봉) 개수 -->
	<select id="likeCount" resultType="int">
		SELECT count(*) FROM likeData 
			WHERE l_boardNum = #{boardNum} and l_divLike = 'L'
	</select>
	
	<!-- 비추천(역따봉) 추가 -->
	<insert id="addUnlike">
		INSERT INTO likeData VALUES (#{l_id} , #{l_boardNum} , 'U')
	</insert>
	
	<!-- 비추천(역따봉) 개수 -->
	<select id="unlikeCount" resultType="int">
		SELECT count(*) FROM likeData 
			WHERE l_boardNum = #{boardNum} and l_divLike = 'U'
	</select>
	
	<!-- 추천(따봉) 취소 -->
	<delete id="deleteLike">
		DELETE FROM likeData 
			WHERE l_id = #{l_id} and l_boardNum = #{l_boardNum} and l_divLike = 'L'
	</delete>
	
	<!-- 비추천(역따봉) 취소 -->
	<delete id="deleteUnlike">
		DELETE FROM likeData 
			WHERE l_id = #{l_id} and l_boardNum = #{l_boardNum} and l_divLike = 'U'
	</delete>
	
	<!-- 추천 비추천 누른지 구분 -->
	<select id="getLike" resultType="String">
		SELECT l_divLike FROM likeData
			WHERE l_id = #{l_id} and l_boardNum = #{l_boardNum}
	</select>
	
	<!-- 추천 비추천 누른 멤버 리스트 -->
	<select id="likeMemberList" resultType="likeDTO">
		SELECT * FROM likeData JOIN member ON likeData.l_id = member.m_id 
        	WHERE l_boardNum = #{boardNum}
	</select>
	
</mapper>
