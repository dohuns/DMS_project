<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.KG.mybatis.myMapper">

	<!-- 관리자 페이지 > 수빈 -->
	<!-- 회원 목록 조회 -->
	<select id="selectMemberList" resultType="memberDTO">
		SELECT ROWNUM m_rn, m_id, m_pw, m_name, m_nick, m_birth, m_email, m_rank, m_rankNum
		FROM (SELECT * FROM member ORDER BY m_rankNum, m_birth, m_id)
	</select>

	<!-- 회원 목록 > 등급별 목록 출력 -->
	<select id="selectRankList" resultType="memberDTO">
		SELECT ROWNUM m_rn, m_id, m_pw, m_name, m_nick, m_birth, m_email, m_rank, m_rankNum
		FROM (SELECT * FROM member ORDER BY m_rankNum, m_birth, m_id)
		WHERE m_rankNum = #{m_rankNum}
	</select>

	<!-- 회원 목록 관리 > 검색 -->
	<select id="selectSearchList" resultType="memberDTO">
		SELECT ROWNUM m_rn, m_id, m_pw, m_name, m_nick, m_birth, m_email, m_rank, m_rankNum
		FROM (SELECT * FROM member ORDER BY m_rankNum, m_birth)
		WHERE ${searchOption} LIKE '%'||#{keyword}||'%'
	</select>

	<!-- 회원 목록 관리 > 추가 -->
	<insert id="insertMember" parameterType="memberDTO">
		INSERT INTO member (m_id, m_pw, m_nick, m_name, m_birth, m_email, m_rank, m_rankNum) 
		VALUES (#{m_id}, #{m_pw}, #{m_nick}, #{m_name}, SYSDATE, '[R.M]adminTestID', #{m_rank}, #{m_rankNum})
	</insert>

	<!-- 회원 목록 관리 > 수정 -->
	<update id="updateMember" parameterType="memberDTO">
		UPDATE member SET m_pw = #{m_pw}, m_nick = #{m_nick}, m_name = #{m_name},
		m_email = #{m_email}, m_birth = #{m_birth}, m_rank = #{m_rank}, m_rankNum = #{m_rankNum} 
		WHERE m_id = #{m_id}
	</update>

	<!-- 회원 목록 관리 > 수정 > 정보 출력 -->
	<select id="selectInfoList" resultType="memberDTO">
		SELECT * FROM member WHERE m_id = #{m_id}
	</select>

	<!-- 회원 목록 관리 > 삭제 -->
	<update id="deleteMember">
		DELETE FROM member WHERE m_id = #{m_id}
	</update>

	<!-- PAGING > 등급 별 인원 수 -->
	<select id="getMemberCount" resultType="int">
		SELECT COUNT(*) FROM member
	</select>

	<!-- PAGING > 등급 별 인원 수 -->
	<select id="getRankCount" resultType="int">
		SELECT COUNT(*) FROM member WHERE m_rankNum = #{m_rankNum}
	</select>

	<!-- PAGING > 각 페이지별로 인원 출력 -->
	<update id="pagingCount">
		SELECT B.* FROM
		(SELECT ROWNUM m_rn, A.* FROM
		(SELECT * FROM MEMBER ORDER BY m_rankNum, m_birth)A)B
		WHERE m_rn BETWEEN #{startNum}
		AND #{lastNum};
	</update>
</mapper>